# - task: DownloadPipelineArtifact@2
#   inputs:
#     artifact: helm
#     path: '$(System.DefaultWorkingDirectory/helm' 
# - task: DownloadPipelineArtifact@2
#   inputs:
#     artifact: docker
#     path: '$(System.DefaultWorkingDirectory/azpdocker' 
# - task: AzureCLI@2
#   displayName: Config
#   inputs:
#     azureSubscription: ${{parameters.azure_sub}} 
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#         RESOURCE_GROUP_NAME=${{parameters.name}}${{parameters.env}}
#         ARM_SUBSCRIPTION_ID=$(az account show --query id --out tsv)
#         az account set --subscription $ARM_SUBSCRIPTION_ID
#         az aks get-credentials --admin --name $RESOURCE_GROUP_NAME-aks --resource-group $RESOURCE_GROUP_NAME

#         az configure --defaults acr=${RESOURCE_GROUP_NAME}
#         az acr build -t azpagent:latest ./azpdocker

#         # kubectl apply -f ../config/kured.yaml

#         helm init 

#         az acr helm repo add

#         echo "pushing agent to helm"
#         ls -l

#         az acr helm push --force ./helm/azpagent-0.1.0.tgz

#         helm repo update
#         az acr helm list

#         echo "deploying agent to k8s"

#         ADO_TOKEN=$(tr -dc '[[:print:]]' <<< ${ADO_TOKEN})
#         ADO_POOL=$(tr -dc '[[:print:]]' <<< ${ADO_POOL})
#         ADO_URL=$(tr -dc '[[:print:]]' <<< ${ADO_URL})
#         ADO_ACCOUNT=$(tr -dc '[[:print:]]' <<< ${ADO_ACCOUNT})

#         helm upgrade --install azpagent ${RESOURCE_GROUP_NAME}/azpagent \
#             --set azp.url=${ADO_URL},azp.token=${ADO_TOKEN},azp.pool=${ADO_POOL} \
#             --set image.repository=${RESOURCE_GROUP_NAME}.azurecr.io/azpagent 



- task: PublishPipelineArtifact@1
  inputs:
    path: '$(System.DefaultWorkingDirectory)/terraform'
    artifactName: terraform
- task: AzureCLI@2
  displayName: Helm Package
  inputs:
    azureSubscription: ${{parameters.azure_sub}} 
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
        helm init 

        helm package ./azpagent
        ls -l 
        ls -l ./azpagent
# - task: PublishPipelineArtifact@1
#   inputs:
#     path: '$(System.DefaultWorkingDirectory)/azpagent-0.1.0.tgz'
#     artifactName: helm
# - task: PublishPipelineArtifact@1
#   inputs:
#     path: '$(System.DefaultWorkingDirectory)/azpdocker'
#     artifactName: docker